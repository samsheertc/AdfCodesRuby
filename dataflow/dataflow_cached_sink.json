{
	"name": "dataflow_cached_sink",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "AzureBlobCSV",
						"type": "DatasetReference"
					},
					"name": "source2"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable",
						"type": "DatasetReference"
					},
					"name": "source3"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable",
						"type": "DatasetReference"
					},
					"name": "source4"
				}
			],
			"sinks": [
				{
					"name": "MaxEmpID"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable",
						"type": "DatasetReference"
					},
					"name": "sink2"
				},
				{
					"name": "CountryName"
				},
				{
					"name": "Address"
				}
			],
			"transformations": [
				{
					"name": "surrogateKey1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          maxempid as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'select ISNULL(max(empid),999) maxempid from ENTDWDB.[dbo].[tbl_employee]\\n',",
				"     format: 'query') ~> source1",
				"source(output(",
				"          empname as string,",
				"          gender as string,",
				"          country as string,",
				"          salary as short,",
				"          address_id as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source2",
				"source(output(",
				"          country_code as string,",
				"          country_name as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source3",
				"source(output(",
				"          address_id as integer,",
				"          AddressLine1 as string,",
				"          AddressLine2 as string,",
				"          City as string,",
				"          State as string,",
				"          ZipCode as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source4",
				"source2 keyGenerate(output(empid as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"surrogateKey1 derive(empid = MaxEmpID#outputs()[1].maxempid + empid,",
				"          countryName = CountryName#lookup(country).country_name,",
				"          AddressLine1 = Address#lookup(address_id).AddressLine1,",
				"          AddressLine2 = Address#lookup(address_id).AddressLine2,",
				"          City = Address#lookup(address_id).City,",
				"          State = Address#lookup(address_id).State,",
				"          ZipCode = Address#lookup(address_id).ZipCode) ~> derivedColumn1",
				"source1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     store: 'cache',",
				"     format: 'inline',",
				"     output: false,",
				"     saveOrder: 1,",
				"     mapColumn(",
				"          maxempid",
				"     )) ~> MaxEmpID",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          empname,",
				"          gender,",
				"          salary,",
				"          empid,",
				"          countryName,",
				"          AddressLine1,",
				"          AddressLine2,",
				"          City,",
				"          State,",
				"          ZipCode",
				"     ),",
				"     partitionBy('hash', 1)) ~> sink2",
				"source3 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     keys:['country_code'],",
				"     store: 'cache',",
				"     format: 'inline',",
				"     output: false,",
				"     saveOrder: 1,",
				"     mapColumn(",
				"          country_code,",
				"          country_name",
				"     )) ~> CountryName",
				"source4 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     keys:['address_id'],",
				"     store: 'cache',",
				"     format: 'inline',",
				"     output: false,",
				"     saveOrder: 1,",
				"     mapColumn(",
				"          address_id,",
				"          AddressLine1,",
				"          AddressLine2,",
				"          City,",
				"          State,",
				"          ZipCode",
				"     )) ~> Address"
			]
		}
	}
}